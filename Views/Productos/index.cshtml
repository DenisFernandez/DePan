@model List<DePan.Models.Producto>

@{
    ViewData["Title"] = "Catálogo de Productos";
}

<div class="container">
    <h1 class="text-center mb-4">Nuestros Productos</h1>

    <!-- Filtros y búsqueda -->
    <div class="row mb-4">
        <div class="col-md-8">
            <form asp-action="Index" method="get" class="d-flex">
                <input type="text" name="search" class="form-control me-2" placeholder="Buscar productos..." value="@ViewBag.SearchTerm">
                <button type="submit" class="btn btn-primary">Buscar</button>
                <a href="@Url.Action("Index")" class="btn btn-secondary ms-2">Limpiar</a>
            </form>
        </div>
        <div class="col-md-4">
            <div class="dropdown">
                <button class="btn btn-outline-secondary dropdown-toggle w-100" type="button" data-bs-toggle="dropdown">
                    Categorías
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" href="@Url.Action("Index")">Todas las categorías</a></li>
                    @foreach (var categoria in ViewBag.Categorias)
                    {
                        <li><a class="dropdown-item" href="@Url.Action("Index", new { categoriaId = categoria.IdCategoria })">@categoria.Nombre</a></li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <!-- Productos -->
    <div class="row">
        @foreach (var producto in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <img src="@(producto.ImagenUrl ?? "/images/placeholder.jpg")" class="card-img-top" alt="@producto.Nombre" style="height: 200px; object-fit: cover;">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@producto.Nombre</h5>
                        <p class="card-text flex-grow-1">
                            @if (!string.IsNullOrEmpty(producto.Descripcion))
                            {
                                @(producto.Descripcion.Length > 100 ? producto.Descripcion.Substring(0, 100) + "..." : producto.Descripcion)
                            }
                        </p>
                        <div class="mt-auto">
                            <p class="card-text"><strong>Precio: @producto.Precio.ToString("C")</strong></p>
                            <p class="card-text">
                                <small class="text-muted">
                                    Categoría: @producto.IdCategoriaNavigation?.Nombre<br>
                                    Stock: @producto.Stock | 
                                    @if (producto.Disponible == true)
                                    {
                                        <span class="text-success">Disponible</span>
                                    }
                                    else
                                    {
                                        <span class="text-danger">No disponible</span>
                                    }
                                </small>
                            </p>
                            <div class="d-grid gap-2">
                                <a href="@Url.Action("Details", new { id = producto.IdProducto })" class="btn btn-primary">Ver Detalles</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!Model.Any())
    {
        <div class="text-center">
            <h3>No se encontraron productos</h3>
            <p>Intenta con otros términos de búsqueda o categorías.</p>
        </div>
    }
</div>